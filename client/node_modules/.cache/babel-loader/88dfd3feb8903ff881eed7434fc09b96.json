{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.js\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { clearCart } from \"\";\nimport { SelectCartItems } from \"./client/src/redux/cart/cart.selectors\"; //210\n\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearMyCart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_YXpV5Dm8rG7rmDxLlR9NWhyS00u9QKlt90\";\n\n  const onToken = token => {\n    //210.2\n    axios({\n      url: \"payment\",\n      //the route name we set up in server.js\n      method: \"post\",\n      data: {\n        //the data we are trying to pass through\n        amount: priceForStripe,\n        token: token\n      }\n    }) //if the payment was successful:\n    .then(response => {\n      alert(\"Payment Successful!\");\n    }).catch(error => {\n      console.log(\"Payment error: \", JSON.parse(error));\n      alert(`Payment failed!\n                     There was an issue with the payment.\n                     Please check the provided credit card details.`);\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Place your order\",\n    name: \"React App Online Store\",\n    billingAddress: true,\n    shippingAddress: true // image=\"https://sendeyo.com/up/d/f3eb2117da\"\n    ,\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Place your order\",\n    token: onToken //onSuccess callback that triggers on submition.\n    ,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default StripeCheckoutButton;","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/components/stripe-button/stripe-button.component.js"],"names":["React","StripeCheckout","clearCart","SelectCartItems","axios","StripeCheckoutButton","price","clearMyCart","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SAAQC,SAAR,QAAwB,EAAxB;AACA,SAAQC,eAAR,QAA8B,wCAA9B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AACpD,QAAMC,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAC3B;AACKP,IAAAA,KAAK,CAAC;AACDQ,MAAAA,GAAG,EAAE,SADJ;AACgB;AACjBC,MAAAA,MAAM,EAAE,MAFP;AAGDC,MAAAA,IAAI,EAAE;AAAU;AACXC,QAAAA,MAAM,EAAEP,cADP;AAEDG,QAAAA,KAAK,EAAEA;AAFN;AAHL,KAAD,CAAL,CASG;AATH,KAUCK,IAVD,CAUMC,QAAQ,IAAI;AACbC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AAEJ,KAbD,EAcCC,KAdD,CAcOC,KAAK,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CACC;;oEADD,CAAL;AAIJ,KApBD;AAqBJ,GAvBD;;AAwBA,SACK,oBAAC,cAAD;AACA,IAAA,KAAK,EAAC,kBADN;AAEA,IAAA,IAAI,EAAC,wBAFL;AAGA,IAAA,cAAc,MAHd;AAIA,IAAA,eAAe,MAJf,CAKA;AALA;AAMA,IAAA,WAAW,EAAG,kBAAiBZ,KAAM,EANrC;AAOA,IAAA,MAAM,EAAEE,cAPR;AAQA,IAAA,UAAU,EAAC,kBARX;AASA,IAAA,KAAK,EAAEE,OATP,CASgB;AAThB;AAUA,IAAA,SAAS,EAAED,cAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL;AAcJ,CA1CD;;AA4CA,eAAeJ,oBAAf","sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nimport {clearCart} from \"\"\r\nimport {SelectCartItems} from \"./client/src/redux/cart/cart.selectors\";\r\n\r\n//210\r\nimport axios from \"axios\"; \r\n\r\n\r\nconst StripeCheckoutButton = ({ price, clearMyCart }) => {\r\n     const priceForStripe = price * 100;\r\n     const publishableKey = \"pk_test_YXpV5Dm8rG7rmDxLlR9NWhyS00u9QKlt90\";\r\n\r\n     const onToken = (token) => {\r\n     //210.2\r\n          axios({\r\n               url: \"payment\",  //the route name we set up in server.js\r\n               method: \"post\",\r\n               data: {         //the data we are trying to pass through\r\n                    amount: priceForStripe,\r\n                    token: token\r\n               }\r\n\r\n          \r\n          }) //if the payment was successful:\r\n          .then(response => {\r\n               alert(\"Payment Successful!\")\r\n             \r\n          })\r\n          .catch(error => {\r\n               console.log(\"Payment error: \", JSON.parse(error));\r\n               alert(\r\n                    `Payment failed!\r\n                     There was an issue with the payment.\r\n                     Please check the provided credit card details.`);\r\n          });\r\n     }\r\n     return (\r\n          <StripeCheckout\r\n          label=\"Place your order\"\r\n          name=\"React App Online Store\"\r\n          billingAddress\r\n          shippingAddress\r\n          // image=\"https://sendeyo.com/up/d/f3eb2117da\"\r\n          description={`Your total is $${price}`}\r\n          amount={priceForStripe}\r\n          panelLabel=\"Place your order\"\r\n          token={onToken} //onSuccess callback that triggers on submition.\r\n          stripeKey={publishableKey}   \r\n          />      \r\n     );\r\n};\r\n\r\nexport default StripeCheckoutButton;"]},"metadata":{},"sourceType":"module"}