{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\src\\\\components\\\\checkout-item\\\\checkout-item.component.js\";\nimport React from \"react\"; // import \"./checkout-item.styles.scss\";\n//124. we need to bind our new action to the component here:\n\nimport { connect } from \"react-redux\";\nimport { clearItemFromCart, addItem, removeItem, clearCart } from \"../../redux/cart/cart.actions\";\nimport { CheckoutContainer, ImageContainer, SpanStyle, Arrow, Quantity, Value, RemoveButton } from \"./checkout-item.styles\";\n\nconst CheckoutItem = ({\n  cartItem,\n  clearItem,\n  increaseQuantity,\n  decreaseQuantity\n}) => {\n  const name = cartItem.name,\n        imageUrl = cartItem.imageUrl,\n        price = cartItem.price,\n        quantity = cartItem.quantity;\n  return (//passing the whole item\n    React.createElement(CheckoutContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(ImageContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(SpanStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, name), React.createElement(Quantity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Arrow, {\n      onClick: () => decreaseQuantity(cartItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\u227A\"), React.createElement(Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, quantity), React.createElement(Arrow, {\n      onClick: () => increaseQuantity(cartItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u227B\")), React.createElement(SpanStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"$\", price), React.createElement(RemoveButton, {\n      onClick: () => clearItem(cartItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \\u2718\"), React.createElement(RemoveButton, {\n      onClick: () => clearItem(cartItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \\u2718\"))\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  increaseQuantity: item => dispatch(addItem(item)),\n  decreaseQuantity: item => dispatch(removeItem(item)),\n  cartClear: item => dispatch(clearCart(ite))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/components/checkout-item/checkout-item.component.js"],"names":["React","connect","clearItemFromCart","addItem","removeItem","clearCart","CheckoutContainer","ImageContainer","SpanStyle","Arrow","Quantity","Value","RemoveButton","CheckoutItem","cartItem","clearItem","increaseQuantity","decreaseQuantity","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item","cartClear","ite"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,OAA3B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAgE,+BAAhE;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,KAAtD,EACSC,QADT,EACkBC,KADlB,EACyBC,YADzB,QAC6C,wBAD7C;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,gBAAvB;AAAyCC,EAAAA;AAAzC,CAAD,KAAiE;AAAA,QACzEC,IADyE,GACrCJ,QADqC,CACzEI,IADyE;AAAA,QACnEC,QADmE,GACrCL,QADqC,CACnEK,QADmE;AAAA,QACzDC,KADyD,GACrCN,QADqC,CACzDM,KADyD;AAAA,QAClDC,QADkD,GACrCP,QADqC,CAClDO,QADkD;AAEjF,SACQ;AACE,wBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAK,MAAA,GAAG,EAAEF,QAAV;AAAoB,MAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADL,EAIK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAZ,CAJL,EAKK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,oBAAC,KAAD;AACA,MAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACH,QAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHL,EAQK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQO,QAAR,CARL,EAUK,oBAAC,KAAD;AACA,MAAA,OAAO,EAAE,MAAML,gBAAgB,CAACF,QAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVL,CALL,EAqBK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAaM,KAAb,CArBL,EAsBK,oBAAC,YAAD;AACA,MAAA,OAAO,EAAE,MAAML,SAAS,CAACD,QAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBL,EAyBK,oBAAC,YAAD;AACA,MAAA,OAAO,EAAE,MAAMC,SAAS,CAACD,QAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBL;AAFV;AAgCJ,CAlCD;;AAmCA,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACrCR,EAAAA,SAAS,EAAES,IAAI,IAAID,QAAQ,CAACrB,iBAAiB,CAACsB,IAAD,CAAlB,CADU;AAErCR,EAAAA,gBAAgB,EAAEQ,IAAI,IAAID,QAAQ,CAACpB,OAAO,CAACqB,IAAD,CAAR,CAFG;AAGrCP,EAAAA,gBAAgB,EAAEO,IAAI,IAAID,QAAQ,CAACnB,UAAU,CAACoB,IAAD,CAAX,CAHG;AAIrCC,EAAAA,SAAS,EAAED,IAAI,IAAID,QAAQ,CAAClB,SAAS,CAACqB,GAAD,CAAV;AAJU,CAAf,CAA3B;;AAMC,eAAezB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCT,YAAlC,CAAf","sourcesContent":["import React from \"react\";\r\n// import \"./checkout-item.styles.scss\";\r\n//124. we need to bind our new action to the component here:\r\nimport {connect} from \"react-redux\";\r\nimport {clearItemFromCart, addItem, removeItem, clearCart} from \"../../redux/cart/cart.actions\";\r\nimport {CheckoutContainer, ImageContainer, SpanStyle, Arrow,\r\n         Quantity,Value, RemoveButton } from \"./checkout-item.styles\";\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, increaseQuantity, decreaseQuantity }) => {\r\n     const { name, imageUrl, price, quantity } = cartItem;\r\n     return (\r\n             //passing the whole item\r\n               <CheckoutContainer>\r\n                    <ImageContainer>\r\n                         <img src={imageUrl} alt=\"item\"/>\r\n                    </ImageContainer>\r\n                    <SpanStyle>{name}</SpanStyle>\r\n                    <Quantity>\r\n\r\n                    {/* quantity arrows   */}\r\n                         <Arrow\r\n                         onClick={() => decreaseQuantity(cartItem)}>\r\n                              &#8826;\r\n                         </Arrow>\r\n\r\n                         <Value>{quantity}</Value>\r\n\r\n                         <Arrow\r\n                         onClick={() => increaseQuantity(cartItem)}>\r\n                              &#8827;\r\n                         </Arrow>\r\n                    </Quantity>\r\n\r\n                    <SpanStyle>${price}</SpanStyle>\r\n                    <RemoveButton\r\n                    onClick={() => clearItem(cartItem)}> &#10008;\r\n                    </RemoveButton>\r\n                    <RemoveButton\r\n                    onClick={() => clearItem(cartItem)}> &#10008;\r\n                    </RemoveButton>\r\n               </CheckoutContainer>       \r\n     )\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n     clearItem: item => dispatch(clearItemFromCart(item)),\r\n     increaseQuantity: item => dispatch(addItem(item)),\r\n     decreaseQuantity: item => dispatch(removeItem(item)),\r\n     cartClear: item => dispatch(clearCart(ite    ))\r\n})\r\n export default connect(null, mapDispatchToProps)(CheckoutItem);\r\n "]},"metadata":{},"sourceType":"module"}