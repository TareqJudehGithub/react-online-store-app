{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\src\\\\pages\\\\checkout\\\\checkout.component.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { SelectCartItems, selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { selectCartTotal } from '../../redux/cart/cart.selectors';\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport \"./checkout.styles.scss\";\n\nconst CheckOutPage = ({\n  cartItems,\n  total,\n  itemCount\n}) => React.createElement(\"div\", {\n  className: \"checkout-page\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Shopping Cart\"), React.createElement(\"div\", {\n  className: \"checkout-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"header-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Products\")), React.createElement(\"div\", {\n  className: \"header-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Description\")), React.createElement(\"div\", {\n  className: \"header-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Quantity\")), React.createElement(\"div\", {\n  className: \"header-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Price\")), React.createElement(\"div\", {\n  className: \"header-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Remove\"))), cartItems.map(cartItem => React.createElement(CheckoutItem, {\n  key: cartItem.id,\n  cartItem: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"total\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Total (\", itemCount, \" item): $\", total)), React.createElement(\"div\", {\n  className: \"btn-pay-now\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(StripeCheckoutButton, {\n  price: total,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"test-warning\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"note-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Kindly use this testing credit card\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), \" for making payments:\"), React.createElement(\"div\", {\n  className: \"note-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"Card number: 4242 4242 4242 4242\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), \"exp: (MM/YY) Any future date\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), \"CVC: Any 3 digits\")));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: SelectCartItems,\n  total: selectCartTotal,\n  itemCount: selectCartItemsCount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearMyItems: item => dispatch(clearCart(items))\n});\n\nexport default connect(mapStateToProps)(CheckOutPage);","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/pages/checkout/checkout.component.js"],"names":["React","connect","createStructuredSelector","SelectCartItems","selectCartItemsCount","selectCartTotal","CheckoutItem","StripeCheckoutButton","clearCart","CheckOutPage","cartItems","total","itemCount","map","cartItem","id","mapStateToProps","mapDispatchToProps","dispatch","clearMyItems","item","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,eAAR,EAAyBC,oBAAzB,QAAoD,iCAApD;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,oBAAP,MAAiC,wDAAjC;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,OAAO,wBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAF,KAEhB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,EAEK;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,CAFL,EAKK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADL,CALL,EAQK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,CARL,EAWK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADL,CAXL,EAcK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAdL,CAFL,EAuBUF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAEjB,oBAAC,YAAD;AACA,EAAA,GAAG,EAAEA,QAAQ,CAACC,EADd;AAEA,EAAA,QAAQ,EAAED,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFL,CAvBV,EA+BK;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAcF,SAAd,eAAkCD,KAAlC,CADL,CA/BL,EAmCK;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,oBAAC,oBAAD;AAAsB,EAAA,KAAK,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADL,CAnCL,EA2CK;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhE,0BAFJ,EAKK;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFL,kCAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJL,sBALL,CA3CL,CAFL;;AA8DA,MAAMK,eAAe,GAAGd,wBAAwB,CAAE;AAC7CQ,EAAAA,SAAS,EAAEP,eADkC;AAE7CQ,EAAAA,KAAK,EAAEN,eAFsC;AAG7CO,EAAAA,SAAS,EAAER;AAHkC,CAAF,CAAhD;;AAKA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACrCC,EAAAA,YAAY,EAAEC,IAAI,IAAIF,QAAQ,CAACV,SAAS,CAACa,KAAD,CAAV;AADO,CAAf,CAA3B;;AAGA,eAAepB,OAAO,CAACe,eAAD,CAAP,CAA0BP,YAA1B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {SelectCartItems, selectCartItemsCount} from \"../../redux/cart/cart.selectors\";\r\nimport {selectCartTotal} from '../../redux/cart/cart.selectors';\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\nimport {clearCart} from \"../../redux/cart/cart.actions\"\r\nimport \"./checkout.styles.scss\";\r\n\r\nconst CheckOutPage = ( { cartItems, total, itemCount }) => (\r\n\r\n     <div className=\"checkout-page\">\r\n        <span className=\"title\">Shopping Cart</span>\r\n          <div className=\"checkout-header\">\r\n\r\n               <div className=\"header-block\">\r\n                    <span>Products</span>\r\n               </div>\r\n               <div className=\"header-block\">\r\n                    <span>Description</span>\r\n               </div>\r\n               <div className=\"header-block\">\r\n                    <span>Quantity</span>\r\n               </div>\r\n               <div className=\"header-block\">\r\n                    <span>Price</span>\r\n               </div>\r\n               <div className=\"header-block\">\r\n                    <span>Remove</span>\r\n               </div>\r\n              \r\n\r\n          </div>\r\n          {\r\n               cartItems.map(cartItem =>\r\n                    (\r\n                    <CheckoutItem \r\n                    key={cartItem.id}\r\n                    cartItem={cartItem}/>\r\n                    )\r\n               )\r\n          }\r\n          <div className=\"total\">\r\n               <span>Total ({itemCount} item): ${total}</span>\r\n          </div>\r\n          \r\n          <div className=\"btn-pay-now\">\r\n               <StripeCheckoutButton price={total}\r\n               \r\n               >\r\n               </StripeCheckoutButton>\r\n\r\n          </div>\r\n               \r\n          <div className=\"test-warning\">\r\n              \r\n              <div className=\"note-header\">Kindly use this testing credit card<br/> for making payments:\r\n              </div> \r\n\r\n               <div className=\"note-body\">\r\n                    Card number: 4242 4242 4242 4242 \r\n                    <br />\r\n                    exp: (MM/YY) Any future date\r\n                    <br />\r\n                    CVC: Any 3 digits\r\n               </div>\r\n               \r\n          </div>\r\n          \r\n     </div>\r\n)\r\nconst mapStateToProps = createStructuredSelector ({\r\n     cartItems: SelectCartItems,\r\n     total: selectCartTotal,\r\n     itemCount: selectCartItemsCount\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n     clearMyItems: item => dispatch(clearCart(items))\r\n});\r\nexport default connect(mapStateToProps) (CheckOutPage);"]},"metadata":{},"sourceType":"module"}