{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button-component\";\n\nconst Signup = () => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n  const persistDataOverRender = useRef({\n    willUnmount: false\n  });\n  useEffect(() => {\n    persistDataOverRender.current.willUnmount = true;\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"password and confirm password does not match\");\n      return;\n    }\n\n    try {\n      const _ref = await auth.createUserWithEmailAndPassword(email, password),\n            user = _ref.user;\n\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      !persistDataOverRender.current.willUnmount && //to clear our form\n      setUserCredentials({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"New user?\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Sign up now!\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nexport default Signup;","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/components/sign-up/sign-up.component.js"],"names":["React","useState","useEffect","useRef","FormInput","auth","createUserProfileDocument","CustomButton","Signup","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","persistDataOverRender","willUnmount","current","handleSubmit","event","preventDefault","alert","createUserWithEmailAndPassword","user","error","console","log","message","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport {auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport \"./sign-up.styles.scss\";\r\nimport CustomButton from \"../custom-button/custom-button-component\";\r\n\r\nconst Signup = () => {\r\n    \r\n     const [ userCredentials, setUserCredentials ] = useState({ \r\n               displayName: \"\",\r\n               email: \"\",\r\n               password: \"\",\r\n               confirmPassword: \"\"\r\n          });\r\n\r\n     const { displayName, email, password, confirmPassword } = userCredentials;\r\n          \r\n     const persistDataOverRender = useRef({ willUnmount: false });\r\n\r\n     useEffect(() => {\r\n          persistDataOverRender.current.willUnmount = true\r\n     }, []);\r\n\r\n     const handleSubmit = async (event) => {\r\n          event.preventDefault();\r\n          if(password !== confirmPassword) {\r\n               alert(\"password and confirm password does not match\");\r\n               return;\r\n          }\r\n          try {\r\n               const { user } = await auth.createUserWithEmailAndPassword(\r\n                    email, password\r\n               );\r\n              \r\n               await createUserProfileDocument(user, {displayName});\r\n               !persistDataOverRender.current.willUnmount &&\r\n               //to clear our form\r\n               setUserCredentials({\r\n                         displayName: \"\",\r\n                         email: \"\",\r\n                         password: \"\",\r\n                         confirmPassword: \"\"                 \r\n                         })\r\n\r\n          } catch (error) {\r\n               console.log(error.message);\r\n          }\r\n     };\r\n\r\n     const handleChange = (event) => {\r\n          const { name, value } = event.target;\r\n               setUserCredentials({...userCredentials, [name]: value})\r\n     }\r\n          return(\r\n               <div className=\"sign-up\">\r\n                    <h2 className=\"title\">New user?</h2>\r\n                    <h2>Sign up now!</h2>\r\n                    <form className=\"sign-up-form\"\r\n                    onSubmit={handleSubmit}\r\n                    >\r\n                    <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                    >\r\n                    </FormInput>\r\n                    <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label=\"email\"\r\n                    required\r\n                    >\r\n                    </FormInput>\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label=\"password\"\r\n                    required\r\n                    >\r\n                    </FormInput>\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label=\"confirm Password\"\r\n                    required\r\n                    >\r\n                    </FormInput>\r\n\r\n                    <CustomButton type=\"submit\">\r\n                    SIGN UP\r\n                    </CustomButton>\r\n                    </form>\r\n               </div>\r\n          )\r\n   \r\n}\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}