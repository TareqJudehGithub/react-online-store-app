{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button-component\";\nimport { signInWithGoogle, auth } from \"../../firebase/firebase.utils\";\nimport \"./sign-in.styles.scss\";\n\nconst Signin = () => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const persistDataOverRender = useRef({\n    willUnmount: false\n  });\n  const email = userCredentials.email,\n        password = userCredentials.password;\n  useEffect(() => {\n    persistDataOverRender.current.willUnmount = true;\n  }, []);\n\n  const handleSumbit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      !persistDataOverRender.current.willUnmount && setUserCredentials({\n        //clears the Sign In form\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"ALREADY HAVE AN ACCOUNT?\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(\"form\", {\n    onSubmit: handleSumbit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\" // placeholder=\"example@email.com\" \n    ,\n    value: email,\n    onChangeProp: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\" // placeholder=\"enter password\"\n    ,\n    value: password,\n    onChangeProp: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    onClick: signInWithGoogle,\n    isGoogleSignin: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/components/sign-in/sign-in.component.js"],"names":["React","useState","useRef","useEffect","FormInput","CustomButton","signInWithGoogle","auth","Signin","email","password","userCredentials","setUserCredentials","persistDataOverRender","willUnmount","current","handleSumbit","event","preventDefault","signInWithEmailAndPassword","error","console","log","handleChange","target","value","name"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button-component\";\r\nimport  {signInWithGoogle, auth} from \"../../firebase/firebase.utils\";\r\n\r\nimport \"./sign-in.styles.scss\";\r\n\r\nconst Signin = () => {\r\n    \r\n          const [userCredentials, setUserCredentials ] = useState({\r\n               email: \"\",\r\n               password: \"\"\r\n          });\r\n          const persistDataOverRender = useRef({ willUnmount: false});\r\n          const { email, password } = userCredentials;\r\n \r\n          useEffect(() => {\r\n               persistDataOverRender.current.willUnmount = true;\r\n          }, []);\r\n\r\n     const handleSumbit = async (event) => {\r\n          event.preventDefault();\r\n          try {\r\n               await auth.signInWithEmailAndPassword(email, password);\r\n               !persistDataOverRender.current.willUnmount &&\r\n               setUserCredentials({ //clears the Sign In form\r\n                    email: \"\",\r\n                    password: \"\"    \r\n               });\r\n\r\n          } catch (error) {\r\n               console.log(error);\r\n          }\r\n\r\n     }\r\n     const handleChange = (event) => {\r\n          const { value, name } =event.target;\r\n          setUserCredentials({...userCredentials, [name]: value})\r\n     }\r\n\r\n     return (\r\n          <div className=\"sign-in\">\r\n               <h2 className=\"title\">ALREADY HAVE AN ACCOUNT?</h2>\r\n               <h2>SIGN IN</h2>\r\n\r\n               <form\r\n               onSubmit={handleSumbit}>\r\n\r\n                    <FormInput \r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    // placeholder=\"example@email.com\" \r\n                    value={email}\r\n                    onChangeProp={handleChange}\r\n                    label=\"email\"\r\n                    required\r\n                    />\r\n               \r\n                    <FormInput\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    // placeholder=\"enter password\"\r\n                    value={password}\r\n                    onChangeProp={handleChange}\r\n                    label=\"password\"\r\n                    required\r\n                    />\r\n                    <div className=\"buttons\">\r\n                    <CustomButton \r\n                    type=\"submit\"\r\n                    >Sign in</CustomButton>\r\n\r\n                    <CustomButton\r\n                    onClick={signInWithGoogle}\r\n                     isGoogleSignin>\r\n                    Sign in with Google</CustomButton>\r\n                    </div>\r\n                    \r\n               </form>\r\n     </div>\r\n          )\r\n     \r\n}\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}