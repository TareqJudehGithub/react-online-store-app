{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Dev\\\\Complete React Dev2020\\\\Course Projects\\\\react-online-store-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? //if the item to be added is already in the cart:\n    _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  } else {\n    //if the item is will be added to cart for the 1st time:\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n}; //checkout-item arrows:  (remove)\n\nexport const removeItemFromCart = (cartItems, cartItemsToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToRemove.id); //if the quantity is 1, then remove it:\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => //keep rest of cart items in the array:\n    cartItem.id !== cartItemsToRemove.id);\n  } //if the quantity > 1:\n  else {\n      return cartItems.map(cartItem => cartItem.id === cartItemsToRemove.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity - 1\n      }) : cartItem);\n    }\n};","map":{"version":3,"sources":["E:/Web Dev/Complete React Dev2020/Course Projects/react-online-store-app/client/src/redux/cart/cart.util.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemsToRemove","filter"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEtD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAE3CA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAFV,CAAzB;;AAKA,MAAGH,gBAAH,EAAqB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GAEA;AAFA,sBAGID,QAHJ;AAGcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;AAH3C,SAKAH,QANH,CAAP;AAQJ,GATD,MAUI;AACC;AACA,WAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCM,MAAAA,QAAQ,EAAE;AAA7C,OAAP;AACJ;AAGL,CAvBM,C,CAwBP;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,iBAAZ,KAAkC;AAChE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAC/CA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EADV,CAAzB,CADgE,CAI/D;;AACA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAoC;AAC/B,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAEhC;AACKA,IAAAA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EAHhC,CAAP;AAIJ,GALD,CAMA;AANA,OAOI;AACC,aAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAExBA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EAAlC,qBAEID,QAFJ;AAEcG,QAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAF5C,WAIAH,QANE,CAAP;AAQJ;AACL,CAtBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n     \r\n     const existingCartItem = cartItems.find(cartItem =>\r\n          \r\n          cartItem.id === cartItemToAdd.id\r\n          );\r\n    \r\n     if(existingCartItem) {\r\n          return cartItems.map(cartItem =>                 \r\n                    cartItem.id === cartItemToAdd.id\r\n                    ?\r\n                    //if the item to be added is already in the cart:\r\n                    {...cartItem, quantity: cartItem.quantity +1 }\r\n                    :\r\n                    cartItem\r\n          )        \r\n     }\r\n     else{\r\n          //if the item is will be added to cart for the 1st time:\r\n          return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\r\n     }\r\n     \r\n     \r\n};\r\n//checkout-item arrows:  (remove)\r\nexport const removeItemFromCart = (cartItems, cartItemsToRemove) => {\r\n    const existingCartItem = cartItems.find(cartItem =>\r\n     cartItem.id === cartItemsToRemove.id)\r\n     \r\n     //if the quantity is 1, then remove it:\r\n     if (existingCartItem.quantity === 1){\r\n          return cartItems.filter(cartItem =>\r\n\r\n          //keep rest of cart items in the array:\r\n               cartItem.id !== cartItemsToRemove.id)\r\n     }\r\n     //if the quantity > 1:\r\n     else{\r\n          return cartItems.map(cartItem =>\r\n              \r\n               cartItem.id === cartItemsToRemove.id\r\n               ?\r\n               {...cartItem, quantity: cartItem.quantity - 1 }\r\n               :\r\n               cartItem\r\n               )\r\n     }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}